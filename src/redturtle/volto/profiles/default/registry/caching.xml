<registry>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.cacheStopRequestVariables" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="cacheStopRequestVariables">
    <field type="plone.registry.field.Tuple">
      <default>
        <element>statusmessages</element>
        <element>SearchableText</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Variables in the request that prevent caching if present</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Request variables that prevent caching</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Request variables</title>
      </value_type>
    </field>
    <value>
      <element>statusmessages</element>
      <element>SearchableText</element>
    </value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.contentTypeRulesetMapping" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="contentTypeRulesetMapping">
    <field type="plone.registry.field.Dict">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Maps content type names to ruleset names</description>
      <key_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Content type name</title>
      </key_type>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Content type/ruleset mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Ruleset name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.purgedContentTypes" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="purgedContentTypes">
    <field type="plone.registry.field.Tuple">
      <default>
        <element>File</element>
        <element>Image</element>
        <element>News Item</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">List content types which should be purged when modified</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Content types to purge</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Content type name</title>
      </value_type>
    </field>
    <value>
      <element>Bando</element>
      <element>Collection</element>
      <element>Discussion Item</element>
      <element>Pagina Argomento</element>
      <element>Event</element>
      <element>File</element>
      <element>Folder</element>
      <element>Documento Personale</element>
      <element>Image</element>
      <element>Persona</element>
      <element>Pratica</element>
      <element>Modulo</element>
      <element>LIF</element>
      <element>LRF</element>
      <element>Link</element>
      <element>Luogo</element>
      <element>News Item</element>
      <element>Document</element>
      <element>Plone Site</element>
      <element>RicevutaPagamento</element>
      <element>CartellaModulistica</element>
      <element>Servizio</element>
      <element>UnitaOrganizzativa</element>
      <element>TempFolder</element>
    </value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.templateRulesetMapping" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="templateRulesetMapping">
    <field type="plone.registry.field.Dict">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Maps skin layer page template names to ruleset names</description>
      <key_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Page template name</title>
      </key_type>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Page template/ruleset mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Ruleset name</title>
      </value_type>
    </field>
    <value>
      <element key="RSS">plone.content.feed</element>
      <element key="accessibility-info">plone.content.itemView</element>
      <element key="atom.xml">plone.content.feed</element>
      <element key="file_view">plone.content.itemView</element>
      <element key="image_view">plone.content.itemView</element>
      <element key="image_view_fullscreen">plone.content.itemView</element>
      <element key="itunes.xml">plone.content.feed</element>
      <element key="rss.xml">plone.content.feed</element>
      <element key="search_rss">plone.content.feed</element>
      <element key="sitemap">plone.content.itemView</element>
    </value>
  </record>
  <record name="plone.app.caching.moderateCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.moderateCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.anonOnly">
    <field ref="plone.app.caching.moderateCaching.anonOnly"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.etags">
    <field ref="plone.app.caching.moderateCaching.etags"/>
    <value>
      <element>userid</element>
      <element>catalogCounter</element>
      <element>userLanguage</element>
      <element>skin</element>
    </value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.lastModified">
    <field ref="plone.app.caching.moderateCaching.lastModified"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.ramCache">
    <field ref="plone.app.caching.moderateCaching.ramCache"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.smaxage">
    <field ref="plone.app.caching.moderateCaching.smaxage"/>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.vary">
    <field ref="plone.app.caching.moderateCaching.vary"/>
    <value/>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.anonOnly">
    <field ref="plone.app.caching.moderateCaching.anonOnly"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.etags">
    <field ref="plone.app.caching.moderateCaching.etags"/>
    <value/>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.lastModified">
    <field ref="plone.app.caching.moderateCaching.lastModified"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.ramCache">
    <field ref="plone.app.caching.moderateCaching.ramCache"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.smaxage">
    <field ref="plone.app.caching.moderateCaching.smaxage"/>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.vary">
    <field ref="plone.app.caching.moderateCaching.vary"/>
    <value/>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.folderView.anonOnly">
    <field ref="plone.app.caching.moderateCaching.anonOnly"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.folderView.etags">
    <field ref="plone.app.caching.moderateCaching.etags"/>
    <value>
      <element>userid</element>
      <element>catalogCounter</element>
      <element>userLanguage</element>
      <element>skin</element>
      <element>locked</element>
      <element>copy</element>
    </value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.folderView.lastModified">
    <field ref="plone.app.caching.moderateCaching.lastModified"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.folderView.ramCache">
    <field ref="plone.app.caching.moderateCaching.ramCache"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.folderView.smaxage">
    <field ref="plone.app.caching.moderateCaching.smaxage"/>
    <value>3600</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.folderView.vary">
    <field ref="plone.app.caching.moderateCaching.vary"/>
    <value>X-Anonymous</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.anonOnly">
    <field ref="plone.app.caching.moderateCaching.anonOnly"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.etags">
    <field ref="plone.app.caching.moderateCaching.etags"/>
    <value>
      <element>userid</element>
      <element>catalogCounter</element>
      <element>userLanguage</element>
      <element>skin</element>
      <element>locked</element>
    </value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.lastModified">
    <field ref="plone.app.caching.moderateCaching.lastModified"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.ramCache">
    <field ref="plone.app.caching.moderateCaching.ramCache"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.smaxage">
    <field ref="plone.app.caching.moderateCaching.smaxage"/>
    <value>3600</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.vary">
    <field ref="plone.app.caching.moderateCaching.vary"/>
    <value>X-Anonymous</value>
  </record>
  <record name="plone.app.caching.moderateCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.smaxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the caching proxy</description>
      <required>False</required>
      <title>Shared maximum age</title>
    </field>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.moderateCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.maxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the browser or caching proxy</description>
      <required>False</required>
      <title>Maximum age</title>
    </field>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.lastModified">
    <field ref="plone.app.caching.strongCaching.lastModified"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.maxage">
    <field ref="plone.app.caching.strongCaching.maxage"/>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.stableResource.lastModified">
    <field ref="plone.app.caching.strongCaching.lastModified"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.stableResource.maxage">
    <field ref="plone.app.caching.strongCaching.maxage"/>
    <value>31536000</value>
  </record>
  <record name="plone.app.caching.strongCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.smaxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the caching proxy. Leave blank to use value from "Maximum age" field.</description>
      <required>False</required>
      <title>Shared maximum age</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.terseCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.terseCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.terseCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.terseCaching.maxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the browser</description>
      <required>False</required>
      <title>Maximum age</title>
    </field>
    <value>10</value>
  </record>
  <record name="plone.app.caching.terseCaching.plone.content.dynamic.etags">
    <field ref="plone.app.caching.terseCaching.etags"/>
    <value>
      <element>userid</element>
      <element>catalogCounter</element>
      <element>userLanguage</element>
      <element>skin</element>
      <element>locked</element>
      <element>copy</element>
    </value>
  </record>
  <record name="plone.app.caching.terseCaching.plone.content.dynamic.maxage">
    <field ref="plone.app.caching.terseCaching.maxage"/>
    <value>0</value>
  </record>
  <record name="plone.app.caching.terseCaching.plone.content.dynamic.ramCache">
    <field ref="plone.app.caching.terseCaching.ramCache"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.terseCaching.plone.content.dynamic.smaxage">
    <field ref="plone.app.caching.terseCaching.smaxage"/>
    <value>0</value>
  </record>
  <record name="plone.app.caching.terseCaching.plone.content.dynamic.vary">
    <field ref="plone.app.caching.terseCaching.vary"/>
    <value>X-Anonymous, Accept</value>
  </record>
  <record name="plone.app.caching.terseCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.terseCaching.smaxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the caching proxy</description>
      <required>False</required>
      <title>Shared maximum age</title>
    </field>
    <value>60</value>
  </record>
  <record name="plone.app.caching.terseCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.weakCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.weakCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.weakCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.weakCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.weakCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.anonymous_comments" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="anonymous_comments">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_anonymous_comments">If selected, anonymous users are able to post comments without logging in. It is highly recommended to use a captcha solution to prevent spam if this setting is enabled.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_anonymous_comments">Enable anonymous comments</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.anonymous_email_enabled" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="anonymous_email_enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_anonymous_email_enabled">If selected, anonymous user will have to give their email.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_anonymous_email_enabled">Enable anonymous email field</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.captcha" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="captcha">
    <field type="plone.registry.field.Choice">
      <default>disabled</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_captcha">Use this setting to enable or disable Captcha validation for comments. Install plone.formwidget.captcha, plone.formwidget.recaptcha, collective.akismet, or collective.z3cform.norobots if there are no options available.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_captcha">Captcha</title>
      <vocabulary>plone.app.discussion.vocabularies.CaptchaVocabulary</vocabulary>
    </field>
    <value>disabled</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.delete_own_comment_enabled" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="delete_own_comment_enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_delete_own_comment_enabled">If selected, supports deleting of own comments for users with the "Delete own comments" permission.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_delete_own_comment_enabled">Enable deleting own comments</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.edit_comment_enabled" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="edit_comment_enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_edit_comment_enabled">If selected, supports editing of comments for users with the "Edit comments" permission.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_edit_comment_enabled">Enable editing of comments</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.globally_enabled" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="globally_enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_globally_enabled">If selected, users are able to post comments on the site. However, you will still need to enable comments for specific content types, folders or content objects before users will be able to post comments.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_globally_enabled">Globally enable comments</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.moderation_enabled" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="moderation_enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_moderation_enabled">If selected, comments will enter a "Pending" state in which they are invisible to the public. A user with the "Review comments" permission ("Reviewer" or "Manager") can approve comments to make them visible to the public. If you want to enable a custom comment workflow, you have to go to the types control panel.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_moderation_enabled">Enable comment moderation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.moderator_email" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="moderator_email">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_moderator_email">Address to which moderator notifications will be sent.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_moderator_email">Moderator Email Address</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.moderator_notification_enabled" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="moderator_notification_enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_moderator_notification_enabled">If selected, the moderator is notified if a comment needs attention. The moderator email address can be set below.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_moderator_notification_enabled">Enable moderator email notification</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.show_commenter_image" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="show_commenter_image">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_show_commenter_image">If selected, an image of the user is shown next to the comment.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_show_commenter_image">Show commenter image</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.text_transform" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="text_transform">
    <field type="plone.registry.field.Choice">
      <default>text/plain</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_text_transform">Use this setting to choose if the comment text should be transformed in any way. You can choose between "Plain text" and "Intelligent text". "Intelligent text" converts plain text into HTML where line breaks and indentation is preserved, and web and email addresses are made into clickable links.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_text_transform">Comment text transform</title>
      <vocabulary>plone.app.discussion.vocabularies.TextTransformVocabulary</vocabulary>
    </field>
    <value>text/plain</value>
  </record>
  <record name="plone.app.discussion.interfaces.IDiscussionSettings.user_notification_enabled" interface="plone.app.discussion.interfaces.IDiscussionSettings" field="user_notification_enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_user_notification_enabled">If selected, users can choose to be notified of new comments by email.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_user_notification_enabled">Enable user email notification</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.layout.globals.bodyClass.depth">
    <field type="plone.registry.field.Int">
      <description>Depth relative the site root that body class are generated for.
      </description>
      <title>Body class path depth</title>
    </field>
    <value>4</value>
  </record>
  <record name="plone.app.portlets.PortletManagerBlacklist">
    <field type="plone.registry.field.List">
      <description>A list of portlet manager names that will not be shown in the toolbar dropdown</description>
      <title>Toolbar Portlet Manager Blacklist</title>
      <value_type type="plone.registry.field.TextLine"/>
    </field>
    <value>
      <element>plone.dashboard1</element>
      <element>plone.dashboard2</element>
      <element>plone.dashboard3</element>
      <element>plone.dashboard4</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.Creator.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The person that created an item</value>
  </record>
  <record name="plone.app.querystring.field.Creator.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.Creator.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.Creator.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.string.currentUser</element>
      <element>plone.app.querystring.operation.selection.any</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.Creator.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.Creator.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Creator</value>
  </record>
  <record name="plone.app.querystring.field.Creator.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value>plone.app.vocabularies.Users</value>
  </record>
  <record name="plone.app.querystring.field.Description.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">An item's description</value>
  </record>
  <record name="plone.app.querystring.field.Description.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.Description.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Text</value>
  </record>
  <record name="plone.app.querystring.field.Description.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.string.contains</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.Description.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.Description.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Description</value>
  </record>
  <record name="plone.app.querystring.field.Description.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.SearchableText.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Text search of an item's contents</value>
  </record>
  <record name="plone.app.querystring.field.SearchableText.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.SearchableText.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Text</value>
  </record>
  <record name="plone.app.querystring.field.SearchableText.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.string.contains</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.SearchableText.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.SearchableText.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Searchable text</value>
  </record>
  <record name="plone.app.querystring.field.SearchableText.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.Subject.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Tags are used for organization of content</value>
  </record>
  <record name="plone.app.querystring.field.Subject.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.Subject.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Text</value>
  </record>
  <record name="plone.app.querystring.field.Subject.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.selection.any</element>
      <element>plone.app.querystring.operation.selection.all</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.Subject.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.Subject.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Tag</value>
  </record>
  <record name="plone.app.querystring.field.Subject.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value>plone.app.vocabularies.Keywords</value>
  </record>
  <record name="plone.app.querystring.field.Title.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Text search of an item's title</value>
  </record>
  <record name="plone.app.querystring.field.Title.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.Title.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Text</value>
  </record>
  <record name="plone.app.querystring.field.Title.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.string.contains</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.Title.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.Title.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Title</value>
  </record>
  <record name="plone.app.querystring.field.Title.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.created.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The date an item was created</value>
  </record>
  <record name="plone.app.querystring.field.created.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.created.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Dates</value>
  </record>
  <record name="plone.app.querystring.field.created.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
      <element>plone.app.querystring.operation.date.beforeRelativeDate</element>
      <element>plone.app.querystring.operation.date.afterRelativeDate</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.created.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.created.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Creation date</value>
  </record>
  <record name="plone.app.querystring.field.created.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.effective.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The time and date an item was first published</value>
  </record>
  <record name="plone.app.querystring.field.effective.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.effective.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Dates</value>
  </record>
  <record name="plone.app.querystring.field.effective.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
      <element>plone.app.querystring.operation.date.beforeRelativeDate</element>
      <element>plone.app.querystring.operation.date.afterRelativeDate</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.effective.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.effective.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Effective date</value>
  </record>
  <record name="plone.app.querystring.field.effective.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.effectiveRange.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Querying this is undefined</value>
  </record>
  <record name="plone.app.querystring.field.effectiveRange.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.effectiveRange.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Dates</value>
  </record>
  <record name="plone.app.querystring.field.effectiveRange.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.effectiveRange.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.effectiveRange.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Effective range</value>
  </record>
  <record name="plone.app.querystring.field.effectiveRange.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.end.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The end date and time of an event</value>
  </record>
  <record name="plone.app.querystring.field.end.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.end.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Dates</value>
  </record>
  <record name="plone.app.querystring.field.end.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
      <element>plone.app.querystring.operation.date.beforeRelativeDate</element>
      <element>plone.app.querystring.operation.date.afterRelativeDate</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.end.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.end.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Event end date</value>
  </record>
  <record name="plone.app.querystring.field.end.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.exclude_from_nav.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="redturtle.volto" ns0:translate="">Select False to show only elements not excluded from navigation.</value>
  </record>
  <record name="plone.app.querystring.field.exclude_from_nav.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.exclude_from_nav.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="redturtle.volto" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.exclude_from_nav.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.boolean.isTrue</element>
      <element>plone.app.querystring.operation.boolean.isFalse</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.exclude_from_nav.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.exclude_from_nav.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="redturtle.volto" ns0:translate="">Show elements excluded from navigation</value>
  </record>
  <record name="plone.app.querystring.field.exclude_from_nav.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.expires.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The time and date an item was expired</value>
  </record>
  <record name="plone.app.querystring.field.expires.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.expires.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Dates</value>
  </record>
  <record name="plone.app.querystring.field.expires.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
      <element>plone.app.querystring.operation.date.beforeRelativeDate</element>
      <element>plone.app.querystring.operation.date.afterRelativeDate</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.expires.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.expires.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expiration date</value>
  </record>
  <record name="plone.app.querystring.field.expires.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.getId.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The short name of an item (used in the url)</value>
  </record>
  <record name="plone.app.querystring.field.getId.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.getId.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.getId.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.getId.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.getId.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Short name (id)</value>
  </record>
  <record name="plone.app.querystring.field.getId.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.getObjPositionInParent.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The order of an item in its parent folder</value>
  </record>
  <record name="plone.app.querystring.field.getObjPositionInParent.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.getObjPositionInParent.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.getObjPositionInParent.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.int.is</element>
      <element>plone.app.querystring.operation.int.lessThan</element>
      <element>plone.app.querystring.operation.int.largerThan</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.getObjPositionInParent.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.getObjPositionInParent.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Order in folder</value>
  </record>
  <record name="plone.app.querystring.field.getObjPositionInParent.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.getRawRelatedItems.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Find items related to the selected items</value>
  </record>
  <record name="plone.app.querystring.field.getRawRelatedItems.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.getRawRelatedItems.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.getRawRelatedItems.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.reference.is</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.getRawRelatedItems.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.getRawRelatedItems.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Related To</value>
  </record>
  <record name="plone.app.querystring.field.getRawRelatedItems.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.highlight.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="visitmodena.policy" ns0:translate="">Find elements that are highlighted.</value>
  </record>
  <record name="plone.app.querystring.field.highlight.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.highlight.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="visitmodena.policy" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.highlight.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.boolean.isTrue</element>
      <element>plone.app.querystring.operation.boolean.isFalse</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.highlight.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.highlight.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="visitmodena.policy" ns0:translate="">Highlight</value>
  </record>
  <record name="plone.app.querystring.field.highlight.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.isDefaultPage.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Find items that are the default view for their containing folder.</value>
  </record>
  <record name="plone.app.querystring.field.isDefaultPage.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.isDefaultPage.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.isDefaultPage.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.boolean.isTrue</element>
      <element>plone.app.querystring.operation.boolean.isFalse</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.isDefaultPage.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.isDefaultPage.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Default Page</value>
  </record>
  <record name="plone.app.querystring.field.isDefaultPage.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.isFolderish.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Find items that can contain other objects</value>
  </record>
  <record name="plone.app.querystring.field.isFolderish.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.isFolderish.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.isFolderish.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.boolean.isTrue</element>
      <element>plone.app.querystring.operation.boolean.isFalse</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.isFolderish.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.isFolderish.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Folder-like</value>
  </record>
  <record name="plone.app.querystring.field.isFolderish.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.modified.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The time and date an item was last modified</value>
  </record>
  <record name="plone.app.querystring.field.modified.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.modified.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Dates</value>
  </record>
  <record name="plone.app.querystring.field.modified.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
      <element>plone.app.querystring.operation.date.beforeRelativeDate</element>
      <element>plone.app.querystring.operation.date.afterRelativeDate</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.modified.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.modified.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Modification date</value>
  </record>
  <record name="plone.app.querystring.field.modified.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.municipality.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="visitmodena.policy" ns0:translate="">Find by municipality.</value>
  </record>
  <record name="plone.app.querystring.field.municipality.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.municipality.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="visitmodena.policy" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.municipality.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.selection.any</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.municipality.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.municipality.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="visitmodena.policy" ns0:translate="">Municipality</value>
  </record>
  <record name="plone.app.querystring.field.municipality.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value>visitmodena.vocabularies.comuni</value>
  </record>
  <record name="plone.app.querystring.field.path.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The location of an item </value>
  </record>
  <record name="plone.app.querystring.field.path.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.path.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.path.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.string.absolutePath</element>
      <element>plone.app.querystring.operation.string.path</element>
      <element>plone.app.querystring.operation.string.relativePath</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.path.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.path.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Location</value>
  </record>
  <record name="plone.app.querystring.field.path.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.portal_type.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">An item's type (e.g. Event)</value>
  </record>
  <record name="plone.app.querystring.field.portal_type.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.portal_type.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.portal_type.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.selection.any</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.portal_type.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.portal_type.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Type</value>
  </record>
  <record name="plone.app.querystring.field.portal_type.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value>plone.app.vocabularies.ReallyUserFriendlyTypes</value>
  </record>
  <record name="plone.app.querystring.field.review_state.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">An item's workflow state (e.g.published)</value>
  </record>
  <record name="plone.app.querystring.field.review_state.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.review_state.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.review_state.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.selection.any</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.review_state.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.review_state.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Review state</value>
  </record>
  <record name="plone.app.querystring.field.review_state.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value>plone.app.vocabularies.WorkflowStates</value>
  </record>
  <record name="plone.app.querystring.field.show_inactive.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Select which roles have the permission to view inactive objects</value>
  </record>
  <record name="plone.app.querystring.field.show_inactive.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.show_inactive.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.show_inactive.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.string.showInactive</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.show_inactive.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.show_inactive.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Show Inactive</value>
  </record>
  <record name="plone.app.querystring.field.show_inactive.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value>plone.app.vocabularies.Roles</value>
  </record>
  <record name="plone.app.querystring.field.sortable_title.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The item's title, transformed for sorting</value>
  </record>
  <record name="plone.app.querystring.field.sortable_title.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.sortable_title.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Text</value>
  </record>
  <record name="plone.app.querystring.field.sortable_title.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.string.contains</element>
      <element>plone.app.querystring.operation.string.is</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.sortable_title.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.sortable_title.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Sortable Title</value>
  </record>
  <record name="plone.app.querystring.field.sortable_title.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.start.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The start date and time of an event</value>
  </record>
  <record name="plone.app.querystring.field.start.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.start.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Dates</value>
  </record>
  <record name="plone.app.querystring.field.start.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.date.lessThan</element>
      <element>plone.app.querystring.operation.date.largerThan</element>
      <element>plone.app.querystring.operation.date.between</element>
      <element>plone.app.querystring.operation.date.lessThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.largerThanRelativeDate</element>
      <element>plone.app.querystring.operation.date.today</element>
      <element>plone.app.querystring.operation.date.beforeToday</element>
      <element>plone.app.querystring.operation.date.afterToday</element>
      <element>plone.app.querystring.operation.date.beforeRelativeDate</element>
      <element>plone.app.querystring.operation.date.afterRelativeDate</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.start.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.start.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Event start date</value>
  </record>
  <record name="plone.app.querystring.field.start.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.thematic_area.description" interface="plone.app.querystring.interfaces.IQueryField" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.field.thematic_area.enabled" interface="plone.app.querystring.interfaces.IQueryField" field="enabled">
    <field type="plone.registry.field.Bool">
      <title>Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.querystring.field.thematic_area.group" interface="plone.app.querystring.interfaces.IQueryField" field="group">
    <field type="plone.registry.field.TextLine">
      <title>Group</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="visitmodena.policy" ns0:translate="">Metadata</value>
  </record>
  <record name="plone.app.querystring.field.thematic_area.operations" interface="plone.app.querystring.interfaces.IQueryField" field="operations">
    <field type="plone.registry.field.List">
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName">
        <title>Operation ID</title>
      </value_type>
    </field>
    <value>
      <element>plone.app.querystring.operation.selection.any</element>
    </value>
  </record>
  <record name="plone.app.querystring.field.thematic_area.sortable" interface="plone.app.querystring.interfaces.IQueryField" field="sortable">
    <field type="plone.registry.field.Bool">
      <title>Sortable</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.querystring.field.thematic_area.title" interface="plone.app.querystring.interfaces.IQueryField" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="visitmodena.policy" ns0:translate="">Thematic Area</value>
  </record>
  <record name="plone.app.querystring.field.thematic_area.vocabulary" interface="plone.app.querystring.interfaces.IQueryField" field="vocabulary">
    <field type="plone.registry.field.TextLine">
      <title>Vocabulary</title>
    </field>
    <value>visitmodena.vocabularies.used_thematic_areas</value>
  </record>
  <record name="plone.app.querystring.operation.boolean.isFalse.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.boolean.isFalse.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._isFalse</value>
  </record>
  <record name="plone.app.querystring.operation.boolean.isFalse.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">No</value>
  </record>
  <record name="plone.app.querystring.operation.boolean.isFalse.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.boolean.isTrue.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.boolean.isTrue.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._isTrue</value>
  </record>
  <record name="plone.app.querystring.operation.boolean.isTrue.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Yes</value>
  </record>
  <record name="plone.app.querystring.operation.boolean.isTrue.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.date.afterRelativeDate.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">After N days in the future</value>
  </record>
  <record name="plone.app.querystring.operation.date.afterRelativeDate.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._afterRelativeDate</value>
  </record>
  <record name="plone.app.querystring.operation.date.afterRelativeDate.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">After relative Date</value>
  </record>
  <record name="plone.app.querystring.operation.date.afterRelativeDate.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>RelativeDateWidget</value>
  </record>
  <record name="plone.app.querystring.operation.date.afterToday.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">After the current day</value>
  </record>
  <record name="plone.app.querystring.operation.date.afterToday.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._afterToday</value>
  </record>
  <record name="plone.app.querystring.operation.date.afterToday.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">After today</value>
  </record>
  <record name="plone.app.querystring.operation.date.afterToday.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.date.beforeRelativeDate.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Before N days in the past</value>
  </record>
  <record name="plone.app.querystring.operation.date.beforeRelativeDate.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._beforeRelativeDate</value>
  </record>
  <record name="plone.app.querystring.operation.date.beforeRelativeDate.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Before relative Date</value>
  </record>
  <record name="plone.app.querystring.operation.date.beforeRelativeDate.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>RelativeDateWidget</value>
  </record>
  <record name="plone.app.querystring.operation.date.beforeToday.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Before the current day</value>
  </record>
  <record name="plone.app.querystring.operation.date.beforeToday.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._beforeToday</value>
  </record>
  <record name="plone.app.querystring.operation.date.beforeToday.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Before today</value>
  </record>
  <record name="plone.app.querystring.operation.date.beforeToday.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.date.between.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Please use YYYY/MM/DD.</value>
  </record>
  <record name="plone.app.querystring.operation.date.between.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._between</value>
  </record>
  <record name="plone.app.querystring.operation.date.between.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Between dates</value>
  </record>
  <record name="plone.app.querystring.operation.date.between.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>DateRangeWidget</value>
  </record>
  <record name="plone.app.querystring.operation.date.largerThan.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Please use YYYY/MM/DD.</value>
  </record>
  <record name="plone.app.querystring.operation.date.largerThan.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._largerThan</value>
  </record>
  <record name="plone.app.querystring.operation.date.largerThan.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">After date</value>
  </record>
  <record name="plone.app.querystring.operation.date.largerThan.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>DateWidget</value>
  </record>
  <record name="plone.app.querystring.operation.date.largerThanRelativeDate.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Please enter the number in days.</value>
  </record>
  <record name="plone.app.querystring.operation.date.largerThanRelativeDate.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._moreThanRelativeDate</value>
  </record>
  <record name="plone.app.querystring.operation.date.largerThanRelativeDate.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Within last</value>
  </record>
  <record name="plone.app.querystring.operation.date.largerThanRelativeDate.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>RelativeDateWidget</value>
  </record>
  <record name="plone.app.querystring.operation.date.lessThan.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value>Please use YYYY/MM/DD.</value>
  </record>
  <record name="plone.app.querystring.operation.date.lessThan.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._lessThan</value>
  </record>
  <record name="plone.app.querystring.operation.date.lessThan.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Before date</value>
  </record>
  <record name="plone.app.querystring.operation.date.lessThan.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>DateWidget</value>
  </record>
  <record name="plone.app.querystring.operation.date.lessThanRelativeDate.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Please enter the number in days.</value>
  </record>
  <record name="plone.app.querystring.operation.date.lessThanRelativeDate.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._lessThanRelativeDate</value>
  </record>
  <record name="plone.app.querystring.operation.date.lessThanRelativeDate.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Within next</value>
  </record>
  <record name="plone.app.querystring.operation.date.lessThanRelativeDate.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>RelativeDateWidget</value>
  </record>
  <record name="plone.app.querystring.operation.date.today.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The current day</value>
  </record>
  <record name="plone.app.querystring.operation.date.today.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._today</value>
  </record>
  <record name="plone.app.querystring.operation.date.today.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Today</value>
  </record>
  <record name="plone.app.querystring.operation.date.today.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.int.is.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.int.is.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._intEqual</value>
  </record>
  <record name="plone.app.querystring.operation.int.is.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Equals</value>
  </record>
  <record name="plone.app.querystring.operation.int.is.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>StringWidget</value>
  </record>
  <record name="plone.app.querystring.operation.int.largerThan.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.int.largerThan.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._intLargerThan</value>
  </record>
  <record name="plone.app.querystring.operation.int.largerThan.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Larger than</value>
  </record>
  <record name="plone.app.querystring.operation.int.largerThan.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>StringWidget</value>
  </record>
  <record name="plone.app.querystring.operation.int.lessThan.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.int.lessThan.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._intLessThan</value>
  </record>
  <record name="plone.app.querystring.operation.int.lessThan.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Less than</value>
  </record>
  <record name="plone.app.querystring.operation.int.lessThan.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>StringWidget</value>
  </record>
  <record name="plone.app.querystring.operation.intselection.is.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Tip: you can use * to autocomplete.</value>
  </record>
  <record name="plone.app.querystring.operation.intselection.is.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._intEqual</value>
  </record>
  <record name="plone.app.querystring.operation.intselection.is.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Is</value>
  </record>
  <record name="plone.app.querystring.operation.intselection.is.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>MultipleSelectionWidget</value>
  </record>
  <record name="plone.app.querystring.operation.list.contains.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.list.contains.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._contains</value>
  </record>
  <record name="plone.app.querystring.operation.list.contains.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Contains</value>
  </record>
  <record name="plone.app.querystring.operation.list.contains.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>ReferenceWidget</value>
  </record>
  <record name="plone.app.querystring.operation.path.isWithin.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.path.isWithin.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._pathContains</value>
  </record>
  <record name="plone.app.querystring.operation.path.isWithin.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Is within</value>
  </record>
  <record name="plone.app.querystring.operation.path.isWithin.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>ReferenceWidget</value>
  </record>
  <record name="plone.app.querystring.operation.path.isWithinRelative.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.path.isWithinRelative.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._pathContainsRelative</value>
  </record>
  <record name="plone.app.querystring.operation.path.isWithinRelative.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Is within (relative)</value>
  </record>
  <record name="plone.app.querystring.operation.path.isWithinRelative.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>RelativePathWidget</value>
  </record>
  <record name="plone.app.querystring.operation.reference.is.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.reference.is.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._referenceIs</value>
  </record>
  <record name="plone.app.querystring.operation.reference.is.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Equals</value>
  </record>
  <record name="plone.app.querystring.operation.reference.is.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>ReferenceWidget</value>
  </record>
  <record name="plone.app.querystring.operation.selection.all.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Tip: you can use * to autocomplete.</value>
  </record>
  <record name="plone.app.querystring.operation.selection.all.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._all</value>
  </record>
  <record name="plone.app.querystring.operation.selection.all.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Matches all of</value>
  </record>
  <record name="plone.app.querystring.operation.selection.all.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>MultipleSelectionWidget</value>
  </record>
  <record name="plone.app.querystring.operation.selection.any.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Tip: you can use * to autocomplete.</value>
  </record>
  <record name="plone.app.querystring.operation.selection.any.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._contains</value>
  </record>
  <record name="plone.app.querystring.operation.selection.any.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Matches any of</value>
  </record>
  <record name="plone.app.querystring.operation.selection.any.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>MultipleSelectionWidget</value>
  </record>
  <record name="plone.app.querystring.operation.selection.is.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Tip: you can use * to autocomplete.</value>
  </record>
  <record name="plone.app.querystring.operation.selection.is.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._equal</value>
  </record>
  <record name="plone.app.querystring.operation.selection.is.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Is</value>
  </record>
  <record name="plone.app.querystring.operation.selection.is.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>MultipleSelectionWidget</value>
  </record>
  <record name="plone.app.querystring.operation.string.absolutePath.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Location in the site structure</value>
  </record>
  <record name="plone.app.querystring.operation.string.absolutePath.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._absolutePath</value>
  </record>
  <record name="plone.app.querystring.operation.string.absolutePath.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Absolute path</value>
  </record>
  <record name="plone.app.querystring.operation.string.absolutePath.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>ReferenceWidget</value>
  </record>
  <record name="plone.app.querystring.operation.string.contains.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.string.contains.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._contains</value>
  </record>
  <record name="plone.app.querystring.operation.string.contains.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Contains</value>
  </record>
  <record name="plone.app.querystring.operation.string.contains.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>StringWidget</value>
  </record>
  <record name="plone.app.querystring.operation.string.currentUser.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The user viewing the querystring results</value>
  </record>
  <record name="plone.app.querystring.operation.string.currentUser.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._currentUser</value>
  </record>
  <record name="plone.app.querystring.operation.string.currentUser.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Current logged in user</value>
  </record>
  <record name="plone.app.querystring.operation.string.currentUser.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.querystring.operation.string.is.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Tip: you can use * to autocomplete.</value>
  </record>
  <record name="plone.app.querystring.operation.string.is.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._equal</value>
  </record>
  <record name="plone.app.querystring.operation.string.is.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Is</value>
  </record>
  <record name="plone.app.querystring.operation.string.is.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>StringWidget</value>
  </record>
  <record name="plone.app.querystring.operation.string.path.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Location in the navigation structure</value>
  </record>
  <record name="plone.app.querystring.operation.string.path.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._navigationPath</value>
  </record>
  <record name="plone.app.querystring.operation.string.path.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Navigation path</value>
  </record>
  <record name="plone.app.querystring.operation.string.path.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>ReferenceWidget</value>
  </record>
  <record name="plone.app.querystring.operation.string.relativePath.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Use '../' to navigate to parent objects.</value>
  </record>
  <record name="plone.app.querystring.operation.string.relativePath.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._relativePath</value>
  </record>
  <record name="plone.app.querystring.operation.string.relativePath.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Relative path</value>
  </record>
  <record name="plone.app.querystring.operation.string.relativePath.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>RelativePathWidget</value>
  </record>
  <record name="plone.app.querystring.operation.string.showInactive.description" interface="plone.app.querystring.interfaces.IQueryOperation" field="description">
    <field type="plone.registry.field.Text">
      <title>Description</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The user roles which are allowed to see inactive content</value>
  </record>
  <record name="plone.app.querystring.operation.string.showInactive.operation" interface="plone.app.querystring.interfaces.IQueryOperation" field="operation">
    <field type="plone.registry.field.TextLine">
      <title>Operation</title>
    </field>
    <value>plone.app.querystring.queryparser._showInactive</value>
  </record>
  <record name="plone.app.querystring.operation.string.showInactive.title" interface="plone.app.querystring.interfaces.IQueryOperation" field="title">
    <field type="plone.registry.field.TextLine">
      <title>Title</title>
    </field>
    <value xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Show Inactive</value>
  </record>
  <record name="plone.app.querystring.operation.string.showInactive.widget" interface="plone.app.querystring.interfaces.IQueryOperation" field="widget">
    <field type="plone.registry.field.TextLine">
      <title>Widget</title>
    </field>
    <value>MultipleSelectionWidget</value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.absolutePrefix" interface="plone.app.theming.interfaces.IThemeSettings" field="absolutePrefix">
    <field type="plone.registry.field.TextLine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="convert_relative_url">Convert relative URLs in the theme file to absolute paths using this prefix.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="absolute_url_prefix">Absolute URL prefix</title>
    </field>
    <value>/++theme++barceloneta</value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.currentTheme" interface="plone.app.theming.interfaces.IThemeSettings" field="currentTheme">
    <field type="plone.registry.field.TextLine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="current_theme_description">The name of the current theme, i.e. the one applied most recently.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="current_theme">Current theme</title>
    </field>
    <value>barceloneta</value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.custom_css" interface="plone.app.theming.interfaces.IThemeSettings" field="custom_css">
    <field type="plone.registry.field.SourceText">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_custom_css">Define your own custom CSS in the field below. This is a good place for quick customizations of things like colors and the toolbar. Definitions here will override previously defined CSS of Plone. Please use this only for small customizations, as it is hard to keep track of changes here. For bigger changes you most likely want to customize a full theme and make your changes there.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="label_custom_css">Custom CSS</title>
    </field>
    <value></value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.custom_css_timestamp" interface="plone.app.theming.interfaces.IThemeSettings" field="custom_css_timestamp">
    <field type="plone.registry.field.Datetime">
      <default>2021-05-11 17:19:40.723531</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Time stamp when the custom CSS was changed. Used to generate custom.css with timestamp in URL.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Custom CSS Timestamp</title>
    </field>
    <value>2020-11-09 11:03:40.213568</value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.doctype" interface="plone.app.theming.interfaces.IThemeSettings" field="doctype">
    <field type="plone.registry.field.ASCIILine">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="doctype_description">You can specify a Doctype string which will be set on the for example "&lt;!DOCTYPE html&gt;". If left blank the default XHTML 1.0 transitional Doctype or that set in the Diazo theme is used.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="doctype">Doctype</title>
    </field>
    <value>&lt;!DOCTYPE html&gt;</value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.enabled" interface="plone.app.theming.interfaces.IThemeSettings" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="enable_theme_globally">Use this option to enable or disable the theme globally. Note that the options will also affect whether the theme is used when this option is enabled.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="enabled">Enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.hostnameBlacklist" interface="plone.app.theming.interfaces.IThemeSettings" field="hostnameBlacklist">
    <field type="plone.registry.field.List">
      <default>
        <element>127.0.0.1</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="hostname_blacklist_description">If there are hostnames that you do not want to be themed, you can list them here. This is useful during theme development, so that you can compare the themed and unthemed sites. In some cases, you may also want to provided an unthemed host alias for content administrators to be able to use 'plain' Plone.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="hostname_blacklist">Unthemed host names</title>
      <value_type type="plone.registry.field.TextLine"/>
    </field>
    <value>
      <element>127.0.0.1</element>
    </value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.parameterExpressions" interface="plone.app.theming.interfaces.IThemeSettings" field="parameterExpressions">
    <field type="plone.registry.field.Dict">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="parameter_expressions_description">You can define parameters here, which will be passed to the compiled theme. In your rules file, you can refer to a parameter by $name. Parameters are defined using TALES expressions, which should evaluate to a string, a number, a boolean or None. Available variables are `context`, `request`, `portal`, `portal_state`,  and `context_state`.</description>
      <key_type type="plone.registry.field.ASCIILine"/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="parameter_expressions">Parameter expressions</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.readNetwork" interface="plone.app.theming.interfaces.IThemeSettings" field="readNetwork">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="network_urls_allowed">If enabled, network (http, https) urls are allowed in the rules file and this config.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="readNetwork">Read network</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.theming.interfaces.IThemeSettings.rules" interface="plone.app.theming.interfaces.IThemeSettings" field="rules">
    <field type="plone.registry.field.TextLine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="rules_file_path">File path to the rules file</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="rules_file">Rules file</title>
    </field>
    <value>/++theme++barceloneta/rules.xml</value>
  </record>
  <record name="plone.auth_cookie_length" interface="Products.CMFPlone.interfaces.controlpanel.ILoginSchema" field="auth_cookie_length">
    <field type="plone.registry.field.Int">
      <default>0</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Auth cookie length</title>
    </field>
    <value>0</value>
  </record>
  <record name="plone.authenticated_users_only" interface="plone.app.multilingual.interfaces.IMultiLanguageExtraOptionsSchema" field="authenticated_users_only">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="description_auth_ookie_manual_override">Related to: use cookie for manual override</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="heading_auth_cookie_manual_override">Authenticated users only</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.autologin_after_password_reset" interface="Products.CMFPlone.interfaces.controlpanel.ISecuritySchema" field="autologin_after_password_reset">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">After successful password reset the user will be logged in automatically.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Login user after password reset</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.autoresize" interface="Products.CMFPlone.interfaces.controlpanel.ITinyMCESchema" field="autoresize">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">This option gives you the ability to enable/disable auto resizing the editor window depending on the content.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Enable auto resizing of the editor window.</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.available_editors" interface="Products.CMFPlone.interfaces.controlpanel.IEditingSchema" field="available_editors">
    <field type="plone.registry.field.List">
      <default>
        <element>TinyMCE</element>
        <element>None</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Available editors in the portal.</description>
      <missing_value/>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Available editors</title>
      <value_type type="plone.registry.field.TextLine"/>
    </field>
    <value>
      <element>TinyMCE</element>
      <element>None</element>
    </value>
  </record>
  <record name="plone.available_languages" interface="plone.app.multilingual.interfaces.IMultiLanguageExtraOptionsSchema" field="available_languages">
    <field type="plone.registry.field.List">
      <default>
        <element>en</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="description_available_languages">The languages in which the site should be translatable.</description>
      <missing_value/>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="heading_available_languages">Available languages</title>
      <value_type type="plone.registry.field.Choice">
        <vocabulary>plone.app.vocabularies.AvailableContentLanguages</vocabulary>
      </value_type>
    </field>
    <value>
      <element>it</element>
      <element>en</element>
    </value>
  </record>
  <record name="plone.available_timezones" interface="Products.CMFPlone.interfaces.controlpanel.IDateAndTimeSchema" field="available_timezones">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="help_available_timezones">The timezones, which should be available for the portal. Can be set for users and events</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Available timezones</title>
      <value_type type="plone.registry.field.Choice">
        <vocabulary>plone.app.vocabularies.Timezones</vocabulary>
      </value_type>
    </field>
    <value>
      <element>Europe/Rome</element>
    </value>
  </record>
  <record name="plone.block_styles" interface="Products.CMFPlone.interfaces.controlpanel.ITinyMCESchema" field="block_styles">
    <field type="plone.registry.field.List">
      <default>
        <element>Paragraph|p</element>
        <element>Blockquote|blockquote</element>
        <element>Div|div</element>
        <element>Pre|pre</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Name|format</description>
      <missing_value/>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Block styles</title>
      <value_type type="plone.registry.field.TextLine"/>
    </field>
    <value>
      <element>Paragraph|p</element>
      <element>Blockquote|blockquote</element>
      <element>Div|div</element>
      <element>Pre|pre</element>
    </value>
  </record>
  <record name="plone.bundles/filemanager.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/filemanager.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/filemanager.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/filemanager-compiled.css</value>
  </record>
  <record name="plone.bundles/filemanager.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/filemanager.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/filemanager.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/filemanager.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/filemanager.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/filemanager.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/filemanager-compiled.min.js</value>
  </record>
  <record name="plone.bundles/filemanager.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/filemanager.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/filemanager.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/filemanager.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value></value>
  </record>
  <record name="plone.bundles/filemanager.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>filemanager</element>
    </value>
  </record>
  <record name="plone.bundles/filemanager.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/multilingual.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/multilingual.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/multilingual.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++resource++plone.app.multilingual.stylesheet/multilingual.css</value>
  </record>
  <record name="plone.bundles/multilingual.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/multilingual.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/multilingual.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/multilingual.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/multilingual.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/multilingual.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/multilingual.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2016-10-26 00:00:00.000002</value>
  </record>
  <record name="plone.bundles/multilingual.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/multilingual.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/multilingual.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>logged-in</value>
  </record>
  <record name="plone.bundles/multilingual.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/multilingual.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-base.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-base.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-base.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-base.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-base.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-base.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-base.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-base.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-base.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/plone-base-compiled.min.js</value>
  </record>
  <record name="plone.bundles/plone-base.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/plone-base.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-base.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-base.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>default</value>
  </record>
  <record name="plone.bundles/plone-base.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>plone-base</element>
    </value>
  </record>
  <record name="plone.bundles/plone-base.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>jquery</element>
    </value>
  </record>
  <record name="plone.bundles/plone-datatables.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-datatables.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-datatables.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/plone-datatables-compiled.css</value>
  </record>
  <record name="plone.bundles/plone-datatables.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value>plone-base</value>
  </record>
  <record name="plone.bundles/plone-datatables.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-datatables.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-datatables.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-datatables.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-datatables.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/plone-datatables-compiled.min.js</value>
  </record>
  <record name="plone.bundles/plone-datatables.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/plone-datatables.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-datatables.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-datatables.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>default</value>
  </record>
  <record name="plone.bundles/plone-datatables.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>plone-datatables</element>
    </value>
  </record>
  <record name="plone.bundles/plone-datatables.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>jquery</element>
      <element>jquery.browser</element>
      <element>logging</element>
      <element>mockup-patterns-base</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>underscore</element>
    </value>
  </record>
  <record name="plone.bundles/plone-editor-tools.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-editor-tools.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/plone-editor-tools-compiled.css</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value>plone</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value>python: member is not None</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/plone-editor-tools-compiled.min.js</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>logged-in</value>
  </record>
  <record name="plone.bundles/plone-editor-tools.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>plone-editor-tools</element>
    </value>
  </record>
  <record name="plone.bundles/plone-editor-tools.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>backbone</element>
      <element>bootstrap-dropdown</element>
      <element>bootstrap-tooltip</element>
      <element>jquery.browser</element>
      <element>jquery.event.drag</element>
      <element>jquery.event.drop</element>
      <element>jquery.form</element>
      <element>jquery</element>
      <element>logging</element>
      <element>mockup-i18n</element>
      <element>mockup-patterns-autotoc</element>
      <element>mockup-patterns-backdrop</element>
      <element>mockup-patterns-base</element>
      <element>mockup-patterns-modal</element>
      <element>mockup-patterns-moment</element>
      <element>mockup-patterns-pickadate</element>
      <element>mockup-router</element>
      <element>mockup-utils</element>
      <element>moment</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>translate</element>
      <element>underscore</element>
    </value>
  </record>
  <record name="plone.bundles/plone-legacy.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-legacy.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-legacy.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/plone-legacy-compiled.css</value>
  </record>
  <record name="plone.bundles/plone-legacy.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value>plone</value>
  </record>
  <record name="plone.bundles/plone-legacy.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-legacy.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-legacy.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-legacy.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-legacy.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/plone-legacy-compiled.js</value>
  </record>
  <record name="plone.bundles/plone-legacy.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-05-12 11:00:28.019810</value>
  </record>
  <record name="plone.bundles/plone-legacy.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-legacy.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-legacy.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>default</value>
  </record>
  <record name="plone.bundles/plone-legacy.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>plone-app-discussion</element>
      <element>plone-app-event</element>
    </value>
  </record>
  <record name="plone.bundles/plone-legacy.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-logged-in.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-logged-in.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-logged-in.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/plone-logged-in-compiled.css</value>
  </record>
  <record name="plone.bundles/plone-logged-in.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value>plone</value>
  </record>
  <record name="plone.bundles/plone-logged-in.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-logged-in.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-logged-in.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-logged-in.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value>python: member is not None</value>
  </record>
  <record name="plone.bundles/plone-logged-in.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/plone-logged-in-compiled.min.js</value>
  </record>
  <record name="plone.bundles/plone-logged-in.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/plone-logged-in.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-logged-in.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-logged-in.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>logged-in</value>
  </record>
  <record name="plone.bundles/plone-logged-in.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>plone-logged-in</element>
    </value>
  </record>
  <record name="plone.bundles/plone-logged-in.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>backbone</element>
      <element>bootstrap-dropdown</element>
      <element>bootstrap-tooltip</element>
      <element>jquery.browser</element>
      <element>jquery.form</element>
      <element>jquery</element>
      <element>logging</element>
      <element>mockup-i18n</element>
      <element>mockup-patterns-autotoc</element>
      <element>mockup-patterns-backdrop</element>
      <element>mockup-patterns-base</element>
      <element>mockup-patterns-modal</element>
      <element>mockup-patterns-moment</element>
      <element>mockup-router</element>
      <element>mockup-utils</element>
      <element>moment</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>translate</element>
      <element>underscore</element>
    </value>
  </record>
  <record name="plone.bundles/plone-moment.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-moment.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-moment.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-moment.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value>plone-base</value>
  </record>
  <record name="plone.bundles/plone-moment.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-moment.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-moment.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-moment.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-moment.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/plone-moment-compiled.min.js</value>
  </record>
  <record name="plone.bundles/plone-moment.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/plone-moment.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-moment.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-moment.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>default</value>
  </record>
  <record name="plone.bundles/plone-moment.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>plone-moment</element>
    </value>
  </record>
  <record name="plone.bundles/plone-moment.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>jquery</element>
      <element>jquery.browser</element>
      <element>logging</element>
      <element>mockup-patterns-base</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>underscore</element>
    </value>
  </record>
  <record name="plone.bundles/plone-tinymce.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-tinymce.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone-tinymce.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/plone-tinymce-compiled.css</value>
  </record>
  <record name="plone.bundles/plone-tinymce.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value>plone</value>
  </record>
  <record name="plone.bundles/plone-tinymce.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-tinymce.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-tinymce.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone-tinymce.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value>python: member is not None</value>
  </record>
  <record name="plone.bundles/plone-tinymce.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/plone-tinymce-compiled.min.js</value>
  </record>
  <record name="plone.bundles/plone-tinymce.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/plone-tinymce.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-tinymce.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone-tinymce.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>logged-in</value>
  </record>
  <record name="plone.bundles/plone-tinymce.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>plone-tinymce</element>
    </value>
  </record>
  <record name="plone.bundles/plone-tinymce.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>backbone</element>
      <element>bootstrap-dropdown</element>
      <element>bootstrap-tooltip</element>
      <element>jquery.browser</element>
      <element>jquery.event.drag</element>
      <element>jquery.event.drop</element>
      <element>jquery.form</element>
      <element>jquery</element>
      <element>logging</element>
      <element>mockup-i18n</element>
      <element>mockup-patterns-autotoc</element>
      <element>mockup-patterns-backdrop</element>
      <element>mockup-patterns-base</element>
      <element>mockup-patterns-modal</element>
      <element>mockup-patterns-moment</element>
      <element>mockup-patterns-pickadate</element>
      <element>mockup-router</element>
      <element>mockup-utils</element>
      <element>moment</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>translate</element>
      <element>underscore</element>
    </value>
  </record>
  <record name="plone.bundles/plone.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/plone-compiled.css</value>
  </record>
  <record name="plone.bundles/plone.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value>plone-base</value>
  </record>
  <record name="plone.bundles/plone.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/plone.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/plone.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/plone-compiled.min.js</value>
  </record>
  <record name="plone.bundles/plone.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/plone.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/plone.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value>default</value>
  </record>
  <record name="plone.bundles/plone.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>plone</element>
    </value>
  </record>
  <record name="plone.bundles/plone.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>jquery</element>
      <element>jquery.browser</element>
      <element>logging</element>
      <element>mockup-patterns-base</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>underscore</element>
    </value>
  </record>
  <record name="plone.bundles/resourceregistry.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/resourceregistry.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistry.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/resourceregistry-compiled.css</value>
  </record>
  <record name="plone.bundles/resourceregistry.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistry.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistry.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistry.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistry.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistry.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/resourceregistry-compiled.min.js</value>
  </record>
  <record name="plone.bundles/resourceregistry.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-07-05 18:00:00.000006</value>
  </record>
  <record name="plone.bundles/resourceregistry.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistry.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistry.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value></value>
  </record>
  <record name="plone.bundles/resourceregistry.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>resourceregistry</element>
    </value>
  </record>
  <record name="plone.bundles/resourceregistry.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>jquery</element>
    </value>
  </record>
  <record name="plone.bundles/resourceregistryt.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/resourceregistryt.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistryt.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistryt.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistryt.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistryt.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistryt.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/resourceregistryt.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistryt.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistryt.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/resourceregistryt.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistryt.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/resourceregistryt.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value></value>
  </record>
  <record name="plone.bundles/resourceregistryt.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/resourceregistryt.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/thememapper.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.bundles/thememapper.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/thememapper.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>++plone++static/thememapper-compiled.css</value>
  </record>
  <record name="plone.bundles/thememapper.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/thememapper.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/thememapper.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/thememapper.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/thememapper.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/thememapper.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>++plone++static/thememapper-compiled.min.js</value>
  </record>
  <record name="plone.bundles/thememapper.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value>2020-10-28 14:00:00.000002</value>
  </record>
  <record name="plone.bundles/thememapper.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/thememapper.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/thememapper.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value></value>
  </record>
  <record name="plone.bundles/thememapper.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value>
      <element>thememapper</element>
    </value>
  </record>
  <record name="plone.bundles/thememapper.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/yafowil.compile" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="compile">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If its true and you modify this bundle you need to build it before production</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Does your bundle contains any RequireJS or LESS file?</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/yafowil.conditionalcomment" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="conditionalcomment">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to render this resource on conditional comment (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Conditional comment</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/yafowil.csscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="csscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last css compilation</title>
    </field>
    <value>yafowil.plone.css</value>
  </record>
  <record name="plone.bundles/yafowil.depends" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="depends">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case you want to be the last: *, in case its the first should be empty</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Depends on another bundle</title>
    </field>
    <value>plone</value>
  </record>
  <record name="plone.bundles/yafowil.develop_css" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_css">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop CSS</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/yafowil.develop_javascript" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="develop_javascript">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Develop JavaScript</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/yafowil.enabled" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">It's enabled?</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/yafowil.expression" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="expression">
    <field type="plone.registry.field.ASCIILine">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In case its a bundle we can have a condition to render it (it does not apply if the bundle is merged).</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Expression to render</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/yafowil.jscompilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="jscompilation">
    <field type="plone.registry.field.ASCIILine">
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">URL of the last js compilation</title>
    </field>
    <value>yafowil.plone.js</value>
  </record>
  <record name="plone.bundles/yafowil.last_compilation" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="last_compilation">
    <field type="plone.registry.field.Datetime">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Date time of the last compilation of this bundle</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Last compiled date</title>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/yafowil.load_async" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_async">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files asynchronously by adding an ``async`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load asynchronously</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/yafowil.load_defer" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="load_defer">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load the JavaScript files deferred after the document has been parsed but before ``DOMContentLoaded`` by adding a ``defer`` attribute to the script tag.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Load deferred</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.bundles/yafowil.merge_with" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="merge_with">
    <field type="plone.registry.field.Choice">
      <default></default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">In production mode, bundles are merged together to reduce the quantity of JS and CSS resources loaded by the browser. Choose 'default' if this bundle must be available for all the visitors, choose 'logged-in' if it must be available for logged-in users only, or leave it empty if it must not be merged.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Merge with</title>
      <values>
        <element></element>
        <element>default</element>
        <element>logged-in</element>
      </values>
    </field>
    <value></value>
  </record>
  <record name="plone.bundles/yafowil.resources" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="resources">
    <field type="plone.registry.field.List">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The resources that are going to be loaded on this bundle in order</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Loaded resources</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.bundles/yafowil.stub_js_modules" interface="Products.CMFPlone.interfaces.resources.IBundleRegistry" field="stub_js_modules">
    <field type="plone.registry.field.List">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Define list of modules that will be defined empty on RequireJS build steps to prevent loading modules multiple times.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Stub JavaScript modules</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Resource name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.buttons_babel_view_up_to_nr_translations" interface="plone.app.multilingual.interfaces.IMultiLanguageExtraOptionsSchema" field="buttons_babel_view_up_to_nr_translations">
    <field type="plone.registry.field.Int">
      <default>7</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="description_buttons_babel_view_up_to_nr_translations">When there are many translations for an item, the number of displayed buttons for them might get too large to fit inside the template. Choose here from which number onwards a drop-down menu will be displayed instead of buttons. Zero means that buttons will always be used.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="heading_buttons_babel_view_up_to_nr_translations">Use buttons in the bable view for up to how many translations?</title>
    </field>
    <value>7</value>
  </record>
  <record name="plone.bypass_languageindependent_field_permission_check" interface="plone.app.multilingual.interfaces.IMultiLanguageExtraOptionsSchema" field="bypass_languageindependent_field_permission_check">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="description_bypass_languageindependent_field_permission_check">When updating an object with language independent the field will be synced to all target languages. That can produce Unauthorized error messages because if the editor of the canonical object is not allowed to update the target language objects. Enabling this bypasses this permission check. This could also be dangerous, so think about possible security issues before enabling this.</description>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="heading_bypass_languageindependent_field_permission_check">Bypass language independent field permission check</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.cachingProxies" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="cachingProxies">
    <field type="plone.registry.field.Tuple">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Provide the URLs of each proxy to which PURGE requests should be sent.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Caching proxies</title>
      <value_type type="plone.registry.field.URI"/>
    </field>
    <value>
      <element>http://localhost:9068</element>
    </value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.domains" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="domains">
    <field type="plone.registry.field.Tuple">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">This option is only relevant if you are using virtual hosting and you have enabled the option to send PURGE requests with virtual hosting URLs above. If you your site is served on multiple domains e.g. http://example.org and http://www.example.org you may wish to purge both. If so, list all your domains here</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Domains</title>
      <value_type type="plone.registry.field.URI"/>
    </field>
    <value/>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.enabled" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If disabled, no purging will take place</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Enable purging</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.virtualHosting" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="virtualHosting">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">This option is only relevant if you are using virtual hosting with Zope's VirtualHostMonster. This relies on special tokens (VirtualHostBase and VirtualHostRoot) in the URL to instruct Zope about the types of URLs that the user sees. If virtual host URLs are in use and this option is set, PURGE requests will be sent to the caching proxy with the virtual hosting tokens in place. This makes sense if there is a web server in front of your caching proxy performing the rewrites necessary to translate a user-facing URL into a virtual hosting URL, so that the requests the caching proxy sees have the rewrite information in them. Conversely, if the rewrite is done in or behind the caching proxy, you want to disable this option, so that the PURGE requests use URLs that match those seen by the caching proxy as they come from the client.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Send PURGE requests with virtual hosting paths</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.caching.interfaces.ICacheSettings.enabled" interface="plone.caching.interfaces.ICacheSettings" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If not set, no caching operations will be attempted</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Globally enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.caching.interfaces.ICacheSettings.operationMapping" interface="plone.caching.interfaces.ICacheSettings" field="operationMapping">
    <field type="plone.registry.field.Dict">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Maps rule set names to operation names</description>
      <key_type type="plone.registry.field.DottedName">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Rule set name</title>
      </key_type>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Rule set/operation mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Caching operation name</title>
      </value_type>
    </field>
    <value>
      <element key="plone.content.dynamic">plone.app.caching.terseCaching</element>
      <element key="plone.content.feed">plone.app.caching.moderateCaching</element>
      <element key="plone.content.file">plone.app.caching.moderateCaching</element>
      <element key="plone.content.folderView">plone.app.caching.moderateCaching</element>
      <element key="plone.content.itemView">plone.app.caching.moderateCaching</element>
      <element key="plone.resource">plone.app.caching.strongCaching</element>
      <element key="plone.stableResource">plone.app.caching.strongCaching</element>
    </value>
  </record>
  <record name="plone.caching.operations.chain.operations">
    <field type="plone.registry.field.List">
      <description>A list of operations to call, in order</description>
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName"/>
    </field>
    <value/>
  </record>
</registry>